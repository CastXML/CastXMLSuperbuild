trigger:
- master

jobs:
  - job: Linux
    timeoutInMinutes: 0
    cancelTimeoutInMinutes: 300
    pool:
      vmImage: 'ubuntu-18.04'

    steps:
    - script: |
        docker run --rm dockbuild/centos7:latest > ./dockbuild
        chmod +x ./dockbuild

        mkdir build
        ./dockbuild cmake -Bbuild -S. -GNinja
        ./dockbuild ninja -Cbuild
      displayName: 'Build'

    - script: |
        ./dockbuild bash -c 'cd build/castxml-prefix/src/castxml-build && ctest --output-on-failure'
      displayName: 'Test'

    - script: |
        cd build
        tar cvf castxml-linux.tar castxml
        gzip -9 castxml-linux.tar
        mv castxml-linux.tar.gz ..
      displayName: 'Archive'

    - task: PublishPipelineArtifact@0
      inputs:
        artifactName: 'LinuxArchive'
        targetPath: './castxml-linux.tar.gz'

  - job: macOS
    timeoutInMinutes: 0
    cancelTimeoutInMinutes: 300
    pool:
      vmImage: 'macOS-10.15'

    steps:
    - script: |
        mkdir build
        cd build
        brew install ninja
        cmake -GNinja ../
        ninja
      displayName: 'Build'

    - script: |
        cd build/castxml-prefix/src/castxml-build
        ctest --output-on-failure
      displayName: 'Test'

    - script: |
        cd build
        tar cvf castxml-macosx.tar castxml
        gzip -9 castxml-macosx.tar
        mv castxml-macosx.tar.gz ..
      displayName: 'Archive'

    - task: PublishPipelineArtifact@0
      inputs:
        artifactName: 'MacOSArchive'
        targetPath: './castxml-macosx.tar.gz'

  - job: Windows
    timeoutInMinutes: 0
    cancelTimeoutInMinutes: 300
    pool:
      vmImage: 'windows-2019'

    steps:
    - script: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        pip3 install ninja
        set CC=cl.exe
        set CXX=cl.exe

        mkdir build
        cd build
        cmake -GNinja ../
        ninja
      displayName: 'Build'

    - script: |
        cd build/castxml-prefix/src/castxml-build
        ctest --output-on-failure
      displayName: 'Test'

    - script: |
        cd build
        7z a castxml-windows.zip castxml
        mv castxml-windows.zip ..
      displayName: 'Archive'

    - task: PublishPipelineArtifact@0
      inputs:
        artifactName: 'WindowsArchive'
        targetPath: './castxml-windows.zip'
